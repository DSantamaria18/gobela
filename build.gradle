import grails.util.Environment

buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.2"
    }
}

def date = new Date()
def formattedDate = date.format('yyMMddHHmm')
def build = formattedDate.toInteger()

version "$appMajorVersion.$appMinorVersion.$build"
group "gobela"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.2"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-web-testing-support"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    //MySQL
    compile 'mysql:mysql-connector-java:5.1.29'

    //JExcel API
    compile 'net.sourceforge.jexcelapi:jxl:2.6.12'

    //Spring Security
    compile 'org.grails.plugins:spring-security-core:3.2.0'

    //PDFBox
    compile group: 'org.apache.pdfbox', name: 'pdfbox-app', version: '2.0.8'
}

bootRun {
    final Boolean reloadEnabled =
            Boolean.valueOf(
                    System.properties[Environment.RELOAD_ENABLED])

    if (reloadEnabled) {
        systemProperty Environment.RELOAD_ENABLED, reloadEnabled
    }

    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}


assets {
    if(Environment.current == Environment.PRODUCTION){
        minifyJs = true
        minifyCss = true
        enableSourceMaps = true
        includes = ["fonts/*"]
        minifyOptions = [
                languageMode     : 'ES6',
                targetLanguage   : 'ES5', //Can go from ES6 to ES5 for those bleeding edgers
                optimizationLevel: 'SIMPLE'
        ]
    }else{
        minifyJs = false
        minifyCss = false
        includes = ["fonts/*"]
    }
}
